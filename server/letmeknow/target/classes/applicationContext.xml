<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring Schema -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:couchbase="http://www.springframework.org/schema/data/couchbase"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/data/couchbase
	 http://www.springframework.org/schema/data/couchbase/spring-couchbase.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/data/mongo
    http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">

    <context:component-scan base-package="action,model,dao,service,couch"></context:component-scan>

    <couchbase:env connectTimeout="20000" computationPoolSize="10" />

    <couchbase:cluster>
        <couchbase:node>106.14.1.142</couchbase:node>
    </couchbase:cluster>
    <!-- This is needed to probe the server for N1QL support -->
    <!-- Can be either cluster credentials or a bucket credentials -->
    <couchbase:clusterInfo login="Administrator" password="password"/>

    <couchbase:bucket bucketName="notification_bucket" bucketPassword=""/>

    <couchbase:repositories base-package="dao,couch"/>

    <couchbase:template/>

    <couchbase:indexManager/>

    <!-- mongoDB
    <mongo:mongo host="127.0.0.1" port="27017" />
    <mongo:db-factory dbname="notification" />
    <mongo:mapping-converter id="converter" />

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
    </bean>
    -->

    <!-- Bean -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close" p:driverClass="com.mysql.jdbc.Driver"
          p:jdbcUrl="jdbc:mysql://localhost:3306/letmeknow_test" p:user="root"
          p:password="letmeknow" p:maxPoolSize="40" p:minPoolSize="1"
          p:initialPoolSize="1" p:maxIdleTime="20"/>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
          p:dataSource-ref="dataSource">
        <property name="mappingResources">
            <list>
                <value>model/User.hbm.xml</value>
                <value>model/Groups.hbm.xml</value>
                <value>model/GroupMem.hbm.xml</value>
                <value>model/Message.hbm.xml</value>
                <value>model/Complaint.hbm.xml</value>
                <value>model/Application.hbm.xml</value>
            </list>
        </property>
        <!-- Hibernate SessionFactory -->
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
                hibernate.hbm2ddl.auto=update
                hibernate.show_sql=true
                hibernate.format_sql=true
            </value>
        </property>
    </bean>

    <!-- DAO Bean -->
    <bean id="userDao" class="dao.impl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="groupDao" class="dao.impl.GroupDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="commonDao" class="dao.impl.CommonDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="groupMemDao" class="dao.impl.GroupMemDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="complaintDao" class="dao.impl.ComplaintDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="applicationDao" class="dao.impl.ApplicationDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Service Bean -->
    <bean id="loginService" class="service.impl.LoginServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="userService" class="service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="groupService" class="service.impl.GroupServiceImpl">
        <property name="groupDao" ref="groupDao"/>
        <property name="groupMemDao" ref="groupMemDao"/>
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="complaintService" class="service.impl.ComplaintServiceImpl">
        <property name="complaintDao" ref="complaintDao"/>
        <property name="userDao" ref="userDao"/>
        <property name="groupDao" ref="groupDao"/>

    </bean>

    <bean id="applicationService" class="service.impl.ApplicationServiceImpl">
        <property name="applicationDao" ref="applicationDao"/>
        <property name="userDao" ref="userDao" />
        <property name="groupDao" ref="groupDao" />
    </bean>

    <!--
    <bean id="notificationDao" class="deprecated.NotificationDaoImpl">
        <property name="mongoTemplate" ref="mongoTemplate"/>
    </bean>

    <bean id="notificationService" class="deprecated.NotificationServiceImpl">
        <property name="notificationDao" ref="notificationDao"/>
    </bean>
    -->
</beans>